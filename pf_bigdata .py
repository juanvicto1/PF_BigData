# -*- coding: utf-8 -*-
"""PF_BigData

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14DMQ8WA76y-13r5ughCPJyfIjvjFRzC5
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

caminho_arquivo = "/content/municipio_bioma.csv.gz"
municipio_bioma = pd.read_csv(caminho_arquivo)

estado_rj = '31'
estado = municipio_bioma[municipio_bioma['id_municipio'].astype(str).str[:2] == estado_rj].copy()

estado.dropna(subset=['desmatado', 'nao_vegetacao_natural', 'vegetacao_natural'], inplace=True)

area_desmatada = estado.groupby(['bioma', 'ano']).agg({'desmatado': 'sum'}).reset_index()

area_total = estado.groupby(['bioma', 'ano']).agg({'nao_vegetacao_natural': 'sum', 'vegetacao_natural': 'sum'}).reset_index()
area_total['total'] = area_total['nao_vegetacao_natural'] + area_total['vegetacao_natural']

plt.figure(figsize=(12, 8))
for bioma in area_desmatada['bioma'].unique():
    data = area_desmatada[area_desmatada['bioma'] == bioma]
    X = np.arange(len(data))
    y = data['desmatado'].values

    coeficiente_angular, intercepto = np.polyfit(X, y, 1)
    y_pred = coeficiente_angular * X + intercepto

    plt.scatter(area_total.loc[area_total['bioma'] == bioma, 'total'], data['desmatado'], label=bioma)
    plt.plot(area_total.loc[area_total['bioma'] == bioma, 'total'], y_pred, label=f'Regressão - {bioma}', color='red')

plt.xlabel('Área Total (km²)')
plt.ylabel('Área Desmatada (km²)')
plt.title(' Área Desmatada da área total por Bioma no Estado do Rio de Janeiro (2000 - 2022)')
plt.grid(True)
plt.legend()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

caminho_arquivo = "/content/municipio_bioma.csv.gz"
municipio_bioma = pd.read_csv(caminho_arquivo)

estado_rj = '31'
estado_caatinga = municipio_bioma[(municipio_bioma['id_municipio'].astype(str).str[:2] == estado_rj) & (municipio_bioma['bioma'] == 'Caatinga')]

estado_caatinga.dropna(subset=['desmatado', 'nao_vegetacao_natural', 'vegetacao_natural'], inplace=True)

area_desmatada = estado_caatinga.groupby('ano')['desmatado'].sum().dropna()

area_total = estado_caatinga.groupby('ano').agg({'vegetacao_natural': 'sum', 'nao_vegetacao_natural': 'sum'}).reset_index()
area_total['total'] = area_total['vegetacao_natural'] + area_total['nao_vegetacao_natural']

X = np.arange(len(area_desmatada))
y = area_desmatada.values
coeficiente_angular, intercepto = np.polyfit(X, y, 1)
y_pred = coeficiente_angular * X + intercepto

plt.scatter(area_total['total'], area_desmatada, label='Dados anual (2000 até 2022)')
plt.plot(area_total['total'], y_pred, color='red', linewidth=2, label='Linha de Regressão')
plt.xlabel('Área Total (km²)')
plt.ylabel('Área Desmatada (km²)')
plt.title('Regressão Linear: Área Desmatada anual da área total (Caatinga - RJ)')
plt.legend()
plt.grid(True)
plt.show()

print(f"Coeficiente Angular: {coeficiente_angular}")
print(f"Intercepto: {intercepto}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

caminho_arquivo = "/content/municipio_bioma.csv.gz"
municipio_bioma = pd.read_csv(caminho_arquivo)

estado_rj = '31'
estado_mata = municipio_bioma[(municipio_bioma['id_municipio'].astype(str).str[:2] == estado_rj) & (municipio_bioma['bioma'] == 'Mata Atlântica')]

estado_mata.dropna(subset=['desmatado', 'nao_vegetacao_natural', 'vegetacao_natural'], inplace=True)

area_desmatada = estado_caatinga.groupby('ano')['desmatado'].sum().dropna()

area_total = estado_caatinga.groupby('ano').agg({'vegetacao_natural': 'sum', 'nao_vegetacao_natural': 'sum', 'desmatado': 'sum'}).reset_index()
area_total['total'] = area_total['vegetacao_natural'] + area_total['nao_vegetacao_natural']

X = np.arange(len(area_desmatada))
y = area_desmatada.values
coeficiente_angular, intercepto = np.polyfit(X, y, 1)
y_pred = coeficiente_angular * X + intercepto

plt.scatter(area_total['total'], area_desmatada, label='Dados anual (2000 até 2022)', color='green')
plt.plot(area_total['total'], y_pred, color='red', linewidth=2, label='Linha de Regressão')
plt.xlabel('Área Total (km²)')
plt.ylabel('Área Desmatada (km²)')
plt.title('Regressão Linear: Área Desmatada anual da área total (Mata Atlântica - RJ)')
plt.legend()
plt.grid(True)
plt.show()

print(f"Coeficiente Angular: {coeficiente_angular}")
print(f"Intercepto: {intercepto}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

caminho_arquivo = "/content/municipio_bioma.csv.gz"
municipio_bioma = pd.read_csv(caminho_arquivo)

estado_rj = '31'
estado_cerrado = municipio_bioma[(municipio_bioma['id_municipio'].astype(str).str[:2] == estado_rj) & (municipio_bioma['bioma'] == 'Cerrado')]

estado_cerrado.dropna(subset=['desmatado', 'nao_vegetacao_natural', 'vegetacao_natural'], inplace=True)

area_desmatada = estado_caatinga.groupby('ano')['desmatado'].sum().dropna()

area_total = estado_caatinga.groupby('ano').agg({'vegetacao_natural': 'sum', 'nao_vegetacao_natural': 'sum'}).reset_index()
area_total['total'] = area_total['vegetacao_natural'] + area_total['nao_vegetacao_natural']

X = np.arange(len(area_desmatada))
y = area_desmatada.values
coeficiente_angular, intercepto = np.polyfit(X, y, 1)
y_pred = coeficiente_angular * X + intercepto

plt.scatter(area_total['total'], area_desmatada, label='Dados anual (2000 até 2022)', color='orange')
plt.plot(area_total['total'], y_pred, color='red', linewidth=2, label='Linha de Regressão')
plt.xlabel('Área Total (km²)')
plt.ylabel('Área Desmatada (km²)')
plt.title('Regressão Linear: Área Desmatada anual da área total  (Cerrado - RJ)')
plt.legend()
plt.grid(True)
plt.show()

print(f"Coeficiente Angular: {coeficiente_angular}")
print(f"Intercepto: {intercepto}")

import pandas as pd
import matplotlib.pyplot as plt

caminho_arquivo = "/content/municipio_bioma.csv.gz"
municipio_bioma = pd.read_csv(caminho_arquivo)

estado_rj = '31'
estado = municipio_bioma[municipio_bioma['id_municipio'].astype(str).str[:2] == estado_rj].copy()

estado.dropna(subset=['desmatado', 'nao_vegetacao_natural', 'vegetacao_natural'], inplace=True)

area_desmatada = estado.groupby(['bioma', 'ano']).agg({'desmatado': 'sum'}).reset_index()

biomas = area_desmatada['bioma'].unique()

plt.figure(figsize=(16, 12))
for bioma in biomas:
    data = area_desmatada[area_desmatada['bioma'] == bioma]
    plt.subplot(2, 3, biomas.tolist().index(bioma) + 1)
    plt.boxplot(data['desmatado'], labels=[bioma])
    plt.title(f'Bioma: {bioma}')
    plt.ylabel('Área Desmatada (km²)')

plt.suptitle('Boxplot: Área Desmatada por Bioma no Estado do Rio de Janeiro', y=1.0, fontsize=16)
plt.tight_layout()
plt.show()